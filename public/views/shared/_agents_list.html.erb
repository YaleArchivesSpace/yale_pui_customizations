<% list.each do |role, relationships| %>
  <% if relationships.include? 'above-the-scroll' %>
    <h2 class="smaller_gray">
      <%= I18n.t("enumerations.linked_agent_role.#{role}", :default => role) %>
    </h2>
  <% else %>
    <h4>
      <%= I18n.t("enumerations.linked_agent_role.#{role}", :default => role) %>
    </h4>
  <% end %>
  <ul class="present_list agents_list">
    <% relationships.reject{|v| v == 'above-the-scroll' }.each do |relationship| %>
      <% agent = relationship.fetch('_resolved') %>
      <% relator = relationship['relator'] ? I18n.t("enumerations.linked_agent_archival_record_relators.#{relationship['relator']}", :default => relationship['relator']) : nil %>
      <%# mdc: need to add this to core code, as well %>
      <% title = relationship['title'] %>
      <li>
        <% unless relationship['_inherited'].blank? %>
          <%= inheritance(relationship['_inherited']).html_safe %>
        <% end %>
        <%= link_to agent['title'].gsub(/\$\w:\s/, ''), app_prefix(agent['uri']) %>
        <% unless title.nil? %>
          <%= ' -- ' + title %>
        <% end %>
        <% unless relator.nil? %>
          (<%= relator
#removed , I18n.t("#{agent['jsonmodel_type']}._singular") after "relator", as well as the join function since there can be only one relator.
          %>)
        <% end %>
      </li>
    <% end %>
  </ul>
<% end %>
